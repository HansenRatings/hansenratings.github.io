library(RSelenium)
library(XML)
library(dplyr)
library(purrr)
library(rvest)
library(stringr)
library(readr)
# shell('docker run -d -p 4445:4444 selenium/standalone-chrome')
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4445L, browserName = "chrome")
remDr$open()
remDr$open()
remDr$navigate("https://d3football.com/conf/NESCAC/2022/schedule")
remDr$screenshot(display = TRUE)
remDr$getScreenshot()
install.packages("rselenium")
remDr$close()
remDr$open()
remDr$navigate("https://d3football.com/conf/NESCAC/2022/schedule")
source("C:/Users/logan/OneDrive/R/Hansen Ratings/pbp scraper.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/pbp scraper.R", echo=TRUE)
remDr <- remoteDriver(remoteServerAddr = "localhost",
port = 4445L,
browserName = "chrome",
extraCapabilities =
list("chrome_binary" = "C://Program Files/Google/Chrome/Application/chrome.exe"))
remDr$open()
# Navigate to the URL
remDr$navigate(first_url)
# Get the page source
page_source <- remDr$getPageSource()[[1]]
# Close the browser
remDr$close()
# Load the page source into an XML document
page <- read_html(page_source)
# Specify the XPath expression
xpath_expression <- '//*[@id="ui-accordion-1-panel-0"]'
# Extract data using the XPath expression
extracted_data <- html_nodes(page, xpath = xpath_expression) %>% html_text()
# Display the extracted data
print(extracted_data)
first_url
remDr$open()
# Navigate to the URL
remDr$navigate(first_url)
# Get the page source
page_source <- remDr$getPageSource()[[1]]
# Close the browser
remDr$close()
# Load the page source into an XML document
page <- read_html(page_source)
# Specify the XPath expression
xpath_expression <- '//*[@id="contentarea"]/div[3]/div[3]'
# Extract data using the XPath expression
extracted_data <- html_nodes(page, xpath = xpath_expression) %>% html_text()
# Display the extracted data
print(extracted_data)
# Specify the XPath expression
xpath_expression <- '//*[@id="contentarea"]/div[3]'
# Extract data using the XPath expression
extracted_data <- html_nodes(page, xpath = xpath_expression) %>% html_text()
# Display the extracted data
print(extracted_data)
# Split the long string by "\n" and trim whitespaces
extracted_data_vector <- strsplit(trimws(extracted_data), "\n")[[1]]
# Display the extracted data as a vector
print(extracted_data_vector)
# Split the long string by "\n" and trim whitespaces
extracted_data_vector <- trimws(strsplit(extracted_data), "\n")[[1]]
# Split the long string by "\n" and trim whitespaces
extracted_data_vector <- trimws(strsplit(extracted_data, "\n")[[1]])
# Display the extracted data as a vector
print(extracted_data_vector)
extracted_data_vector <- extracted_data_vector[nzchar(extracted_data_vector)]
extracted_data_vector <- extracted_data_vector[nzchar(extracted_data_vector)]
# Display the extracted data as a vector
print(extracted_data_vector)
]
''
/
source("C:/Users/logan/OneDrive/R/Hansen Ratings/Website update code.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/Website update code.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/Website update code.R", echo=TRUE)
