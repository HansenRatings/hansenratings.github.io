score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[14],
home_team = extracted_data_2[26],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[38], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[40])))
}
return(result_list)
}
clean_contest_data <- function(page, game_id) {
# Print the game ID before running the function, to assist with error checking
print(game_id)
# If "Play by play not available" is present, skip processing for this game
if ("not available" %in% html_text(page)) {
print("Play by play not available. Skipping this game.")
return(NULL)
}
# Specify the XPath expression
xpath_expression_1 <- '//*[@id="contentarea"]/div[3]'
# Extract data using the XPath expression
extracted_data <- html_nodes(page, xpath = xpath_expression_1) %>% html_text()
# Split the long string by "\n", trim whitespaces, and remove empty strings
extracted_data_vector <- trimws(strsplit(extracted_data, "\n")[[1]])
extracted_data_vector <- extracted_data_vector[nzchar(extracted_data_vector)]
# Specify the second XPath expression
xpath_expression_2 <- '//*[@id="contentarea"]/table/tbody/tr[1]/td[5]'
# Extract data using the second XPath expression
extracted_data_2 <- html_nodes(page, xpath = xpath_expression_2) %>% html_text()
extracted_data_2 <- trimws(strsplit(extracted_data_2, "\n")[[1]])
if(which(extracted_data_2 == "T") == 7) {
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "Final")
score_by_quarter <-
extracted_data_2[8:19] %>%
matrix(nrow = 2,ncol = 6,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[8],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[20], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[22])))
} else if (which(extracted_data_2 == "T") == 8 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT", "Final")
score_by_quarter <-
extracted_data_2[9:22] %>%
matrix(nrow = 2,ncol = 7,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[9],
home_team = extracted_data_2[16],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[23], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[25])))
} else if (which(extracted_data_2 == "T") == 9 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "Final")
score_by_quarter <-
extracted_data_2[10:25] %>%
matrix(nrow = 2,ncol = 8,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[10],
home_team = extracted_data_2[18],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[26], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[28])))
} else if (which(extracted_data_2 == "T") == 10 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "Final")
score_by_quarter <-
extracted_data_2[11:28] %>%
matrix(nrow = 2,ncol = 9,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[11],
home_team = extracted_data_2[20],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[29], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[31])))
} else if (which(extracted_data_2 == "T") == 11 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "OT4", "Final")
score_by_quarter <-
extracted_data_2[12:31] %>%
matrix(nrow = 2,ncol = 10,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[12],
home_team = extracted_data_2[22],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[32], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[34])))
} else if (which(extracted_data_2 == "T") == 12 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "OT4", "OT5", "Final")
score_by_quarter <-
extracted_data_2[13:34] %>%
matrix(nrow = 2,ncol = 11,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[13],
home_team = extracted_data_2[24],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[35], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[37])))
} else if (which(extracted_data_2 == "T") == 13 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "OT4", "OT5", "OT6", "Final")
score_by_quarter <-
extracted_data_2[14:37] %>%
matrix(nrow = 2,ncol = 12,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[14],
home_team = extracted_data_2[26],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[38], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[40])))
}
return(result_list)
}
# Iterate cleaning function for all webpages
all_contests_clean <- lapply(seq_along(all_contest_data), function(i) {
clean_contest_data(all_contest_data[[i]], game_id = i)
})
html_text(all_contest_data[[110]])
("not available" %in% html_text(all_contest_data[[110]]))
("not available" %>% "Play by play not available")
("not available" %in% "Play by play not available")
clean_contest_data <- function(page, game_id) {
# Print the game ID before running the function, to assist with error checking
print(game_id)
# If "not available" is present, skip processing for this game
if (any(grepl("not available", html_text(page)))) {
print("Play by play not available. Skipping this game.")
return(NULL)
}
# Specify the XPath expression
xpath_expression_1 <- '//*[@id="contentarea"]/div[3]'
# Extract data using the XPath expression
extracted_data <- html_nodes(page, xpath = xpath_expression_1) %>% html_text()
# Split the long string by "\n", trim whitespaces, and remove empty strings
extracted_data_vector <- trimws(strsplit(extracted_data, "\n")[[1]])
extracted_data_vector <- extracted_data_vector[nzchar(extracted_data_vector)]
# Specify the second XPath expression
xpath_expression_2 <- '//*[@id="contentarea"]/table/tbody/tr[1]/td[5]'
# Extract data using the second XPath expression
extracted_data_2 <- html_nodes(page, xpath = xpath_expression_2) %>% html_text()
extracted_data_2 <- trimws(strsplit(extracted_data_2, "\n")[[1]])
if(which(extracted_data_2 == "T") == 7) {
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "Final")
score_by_quarter <-
extracted_data_2[8:19] %>%
matrix(nrow = 2,ncol = 6,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[8],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[20], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[22])))
} else if (which(extracted_data_2 == "T") == 8 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT", "Final")
score_by_quarter <-
extracted_data_2[9:22] %>%
matrix(nrow = 2,ncol = 7,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[9],
home_team = extracted_data_2[16],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[23], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[25])))
} else if (which(extracted_data_2 == "T") == 9 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "Final")
score_by_quarter <-
extracted_data_2[10:25] %>%
matrix(nrow = 2,ncol = 8,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[10],
home_team = extracted_data_2[18],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[26], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[28])))
} else if (which(extracted_data_2 == "T") == 10 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "Final")
score_by_quarter <-
extracted_data_2[11:28] %>%
matrix(nrow = 2,ncol = 9,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[11],
home_team = extracted_data_2[20],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[29], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[31])))
} else if (which(extracted_data_2 == "T") == 11 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "OT4", "Final")
score_by_quarter <-
extracted_data_2[12:31] %>%
matrix(nrow = 2,ncol = 10,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[12],
home_team = extracted_data_2[22],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[32], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[34])))
} else if (which(extracted_data_2 == "T") == 12 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "OT4", "OT5", "Final")
score_by_quarter <-
extracted_data_2[13:34] %>%
matrix(nrow = 2,ncol = 11,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[13],
home_team = extracted_data_2[24],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[35], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[37])))
} else if (which(extracted_data_2 == "T") == 13 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "OT4", "OT5", "OT6", "Final")
score_by_quarter <-
extracted_data_2[14:37] %>%
matrix(nrow = 2,ncol = 12,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[14],
home_team = extracted_data_2[26],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[38], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[40])))
}
return(result_list)
}
# Iterate cleaning function for all webpages
all_contests_clean <- lapply(seq_along(all_contest_data), function(i) {
clean_contest_data(all_contest_data[[i]], game_id = i)
})
html_text(all_contest_data[[111]])
clean_contest_data <- function(page, game_id) {
# Print the game ID before running the function, to assist with error checking
print(game_id)
# If "not available" is present, skip processing for this game
if (any(grepl("not available", html_text(page))) |
any(grepl("not found", html_text(page)))) {
print("Play by play not available. Skipping this game.")
return(NULL)
}
# Specify the XPath expression
xpath_expression_1 <- '//*[@id="contentarea"]/div[3]'
# Extract data using the XPath expression
extracted_data <- html_nodes(page, xpath = xpath_expression_1) %>% html_text()
# Split the long string by "\n", trim whitespaces, and remove empty strings
extracted_data_vector <- trimws(strsplit(extracted_data, "\n")[[1]])
extracted_data_vector <- extracted_data_vector[nzchar(extracted_data_vector)]
# Specify the second XPath expression
xpath_expression_2 <- '//*[@id="contentarea"]/table/tbody/tr[1]/td[5]'
# Extract data using the second XPath expression
extracted_data_2 <- html_nodes(page, xpath = xpath_expression_2) %>% html_text()
extracted_data_2 <- trimws(strsplit(extracted_data_2, "\n")[[1]])
if(which(extracted_data_2 == "T") == 7) {
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "Final")
score_by_quarter <-
extracted_data_2[8:19] %>%
matrix(nrow = 2,ncol = 6,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[8],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[20], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[22])))
} else if (which(extracted_data_2 == "T") == 8 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT", "Final")
score_by_quarter <-
extracted_data_2[9:22] %>%
matrix(nrow = 2,ncol = 7,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[9],
home_team = extracted_data_2[16],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[23], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[25])))
} else if (which(extracted_data_2 == "T") == 9 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "Final")
score_by_quarter <-
extracted_data_2[10:25] %>%
matrix(nrow = 2,ncol = 8,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[10],
home_team = extracted_data_2[18],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[26], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[28])))
} else if (which(extracted_data_2 == "T") == 10 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "Final")
score_by_quarter <-
extracted_data_2[11:28] %>%
matrix(nrow = 2,ncol = 9,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[11],
home_team = extracted_data_2[20],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[29], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[31])))
} else if (which(extracted_data_2 == "T") == 11 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "OT4", "Final")
score_by_quarter <-
extracted_data_2[12:31] %>%
matrix(nrow = 2,ncol = 10,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[12],
home_team = extracted_data_2[22],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[32], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[34])))
} else if (which(extracted_data_2 == "T") == 12 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "OT4", "OT5", "Final")
score_by_quarter <-
extracted_data_2[13:34] %>%
matrix(nrow = 2,ncol = 11,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[13],
home_team = extracted_data_2[24],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[35], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[37])))
} else if (which(extracted_data_2 == "T") == 13 ){
column_names <- c("Team", "Q1", "Q2", "Q3", "Q4", "OT1", "OT2", "OT3", "OT4", "OT5", "OT6", "Final")
score_by_quarter <-
extracted_data_2[14:37] %>%
matrix(nrow = 2,ncol = 12,byrow = TRUE) %>%
as_tibble()
colnames(score_by_quarter) <- column_names
score_by_quarter <- score_by_quarter %>%
mutate_at(vars(Q1:Final), as.numeric)
result_list <- list(
game_id = game_id,
away_team = extracted_data_2[14],
home_team = extracted_data_2[26],
play_by_play = extracted_data_vector,
score_by_quarter = score_by_quarter,
date = as.Date(strsplit(extracted_data_2[38], " ")[[1]][1], format = "%m/%d/%Y"),
attendance = as.numeric(gsub("[^0-9]", "", extracted_data_2[40])))
}
return(result_list)
}
# Iterate cleaning function for all webpages
all_contests_clean <- lapply(seq_along(all_contest_data), function(i) {
clean_contest_data(all_contest_data[[i]], game_id = i)
})
all_contests_clean[1]
all_contests_clean[1][[1]]
all_contests_clean[1][[1]]$score_by_quarter
all_contests_clean[1][[1]]$play_by_play
all_contests_clean[1][[1]]$play_by_play[1:10]
all_contests_clean[[1]]$play_by_play[1:10]
all_contests_clean[[1]]$play_by_play
all_contests_clean[[2]]$play_by_play
all_contests_clean[[1]]$play_by_play[1:10]
library(readr)
getwd()
setwd("C:/Users/logan/OneDrive/R/Hansen Ratings")
all_contests_clean[[1]]$play_by_play %>% write_csv("Game1.csv")
all_contests_clean[[1]]$play_by_play %>% as.data.frame() %>% write_csv("Game1.csv")
source("C:/Users/logan/OneDrive/R/Hansen Ratings/Website update code.R", echo=TRUE)
all_contests_clean[[1]]$play_by_play
convert_play_by_play <- function(raw_pbp) {
game_data <- list()
drive_data <- list()
current_drive <- list()
for (line in raw_pbp) {
if (grepl("^[0-9]+ - [0-9]+", line)) {
# Scoring information
scoring_info <- strsplit(line, " - ")[[1]]
game_data$home_score <- as.numeric(scoring_info[1])
game_data$away_score <- as.numeric(scoring_info[2])
} else if (grepl("^[0-9]+st|[0-9]+nd|[0-9]+rd|[0-9]+th", line)) {
# Quarter information
game_data$quarter <- line
} else if (grepl("drive start at", line)) {
# Drive start information
current_drive <- list()
drive_start_info <- strsplit(line, " ")[[1]]
current_drive$start_time <- drive_start_info[length(drive_start_info) - 1]
current_drive$team <- drive_start_info[1]
current_drive$yard_line <- drive_start_info[length(drive_start_info)]
} else if (grepl("plays,", line)) {
# Drive plays information
drive_info <- strsplit(line, ", ")[[1]]
current_drive$num_plays <- as.numeric(drive_info[1])
current_drive$yards <- as.numeric(drive_info[2])
current_drive$time <- drive_info[length(drive_info)]
drive_data <- c(drive_data, current_drive)
} else if (grepl(" - | - PUNT", line)) {
# Play information
play_info <- strsplit(line, " - ")[[1]]
play_data <- list()
play_data$type <- play_info[1]
play_data$time <- play_info[2]
play_data$yard_line <- play_info[3]
play_data$details <- paste(play_info[4:length(play_info)], collapse = " - ")
current_drive$plays <- c(current_drive$plays, play_data)
}
}
game_data$drives <- drive_data
return(game_data)
}
all_contests_clean[[1]]$play_by_play %>% convert_play_by_play()
