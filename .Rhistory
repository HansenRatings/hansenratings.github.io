group_by(Team_ID) %>%
summarize(Wins = sum(Win),
Losses = sum(Loss),
Win_Perc = sum(Win)/(sum(Win)+sum(Loss)),
Adj_Wins = sum(Adj_Win),
Adj_Losses = sum(Adj_Loss),
Adj_Win_Perc = sum(Adj_Win)/(sum(Adj_Win)+sum(Adj_Loss)))
team_summary
temp_team_summary <- team_summary %>%
transmute(Opp_ID = Team_ID,
Opp_Adj_WP = Adj_Win_Perc)
combined_games_2024 <- combined_games_2024 %>%
left_join(temp_team_summary,
by = Opp_ID)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
temp_team_summary
combined_games_2024
combined_games_2024 <- combined_games_2024 %>%
left_join(temp_team_summary,
by = "Opp_ID")
combined_games_2024
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
combined_games_2024
combined_games_2024 %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
combined_games_2024 <- combined_games_2024 %>%
left_join(temp_team_summary,
by = "Opp_ID") %>%
mutate(Adj_SOS = Game_Wt * SOS,
QWB = if_else(Win > 0 & SOS > QWB_Base,
SOS - QWB_Base, 0),
Adj_QWB = Game_Wt * QWB,
Game_NPI = WP_Coeff*Win +
SOS_Coeff*SOS +
QWB_Mult*QWB,
Adj_Game_NPI = Game_Wt * Game_NPI)
team_summary <- combined_games_2024 %>%
group_by(Team_ID) %>%
summarize(Wins = sum(Win),
Losses = sum(Loss),
Games = Wins+Losses,
WP = Wins/Games,
Adj_Wins = sum(Adj_Win),
Adj_Losses = sum(Adj_Loss),
Adj_Games = Adj_Wins+Adj_Losses,
Adj_WP = Adj_Wins/Adj_Games,
SOS = mean(Adj_SOS) / Adj_Games,
QWB = mean(Adj_QWB) / Adj_Games,
NPI = mean(Adj_Game_NPI) / Adj_Games)
team_summary
team_summary$Adj_WP %>% mean()
combined_games_2024$SOS %>% hist()
combined_games_2024$Game_Wt %>% hist()
team_summary$SOS %>% hist()
team_summary <- combined_games_2024 %>%
group_by(Team_ID) %>%
summarize(Wins = sum(Win),
Losses = sum(Loss),
Games = Wins+Losses,
WP = Wins/Games,
Adj_Wins = sum(Adj_Win),
Adj_Losses = sum(Adj_Loss),
Adj_Games = Adj_Wins+Adj_Losses,
Adj_WP = Adj_Wins/Adj_Games,
SOS = sum(Adj_SOS) / Adj_Games,
QWB = sum(Adj_QWB) / Adj_Games,
NPI = sum(Adj_Game_NPI) / Adj_Games)
team_summary %>% arrange(desc(NPI))
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
temp_opp_summary
combined_games
combined_games %>% View()
combined_games %>%
left_join(temp_team_summary,
by = "Team_ID") %>% View()
combined_games <- combined_games %>%
select(-SOS) %>%
left_join(temp_team_summary,
by = "Team_ID") %>%
left_join(temp_opp_summary,
by = "Opp_ID") %>%
mutate(QWB = if_else(Win > 0 & SOS > QWB_Base,
SOS - QWB_Base, 0),
Game_NPI = WP_Coeff*Win +
SOS_Coeff*SOS +
QWB_Mult*QWB,
Keep = case_when(
Win == 1 & Game_NPI < NPI ~ 0,
Loss == 1 & Game_NPI > NPI ~ 0,
TRUE ~ 1),
New_Game_Wt = Keep * Game_Wt)
temp_team_summary <- combined_games %>%
group_by(Team_ID) %>%
summarize(Adj_Wins = sum(Adj_Win * Keep))
temp_team_summary %>% View()
temp_team_summary <- combined_games %>%
group_by(Team_ID) %>%
summarize(Adj_Wins = sum(Adj_Win),
Kept_Adj_Wins = sum(Adj_Win * Keep))
temp_team_summary %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
combined_games
combined_games %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
combined_games %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
temp_team_summary
temp_team_summary %>% View()
combined_games %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
temp_team_summary %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
combined_games %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
# Merge back into full game list
combined_games <- combined_games %>%
left_join(
win_games %>%
select(Game_ID, Team_ID, Keep_Wt),
by = c("Game_ID", "Team_ID")
) %>%
mutate(
Keep_Wt = if_else(is.na(Keep_Wt), 0, Keep_Wt),  # For non-wins
New_Game_Wt = case_when(
Win == 1 & Game_NPI > NPI ~ Game_Wt,
Loss == 1 & Game_NPI < NPI ~ Game_Wt,
Keep_Wt > 0 ~ Game_Wt * Keep_Wt,
TRUE ~ 0),
Kept_Adj_Win = Win * Keep_Wt,
Kept_Adj_Loss = Loss * Keep_Wt
)
combined_games %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
combined_games %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
new_tables
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
new_tables
new_tables <- NPI_Iteration(team_summary, combined_games)
new_tables <- NPI_Iteration(team_summary, combined_games)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
team_summary
cumulative_NPI_change
new_tables <- NPI_Iteration(team_summary, combined_games)
team_summary <- new_tables[[1]]
combined_games <- new_tables[[2]]
cumulative_NPI_change <- new_tables[[3]]
cumulative_NPI_change
new_tables <- NPI_Iteration(team_summary, combined_games)
combined_games
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
combined_games %>% names()
new_combined_games %>% names()
combined_games %>% names()
combined_games %>% names()
new_combined_games %>% names()
team_summary %>% names()
new_team_summary %>% names()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
# new_tables <- NPI_Iteration(team_summary, combined_games)
# team_summary <- new_tables[[1]]
# new_combined_games <- new_tables[[2]]
# combined_games <- new_combined_games %>%
#   select(Day, Date, Game_ID, Row_ID, Team_ID,
#          HFA, Score, Opp_ID, Opp_Score, Win,
#          Loss, Adj_Win, Adj_Loss, Game_Wt, SOS,
#          Adj_SOS, QWB, Adj_QWB, Game_NPI, Adj_Game_NPI)
# cumulative_NPI_change <- new_tables[[3]]
#
new_tables <- NPI_Iteration(team_summary, combined_games)
new_tables[[1]]
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
team_summary
team_summary %>%View()
combined_games %>%View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
team_summary <- teams_url %>%
left_join(team_summary)
team_summary %>% View()
team_names <- read_csv(
teams_url,
col_names = FALSE)
colnames(hyper_games) <- c(
"Team_ID", "Team_Name")
team_summary <- teams_url %>%
left_join(team_summary)
team_summary
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
team_summary %>% View()
team_summary <- team_names %>%
left_join(team_summary)
team_summary %>% View()
team_summary %>% transmute(Team_Name, SOS = 100*SOS, QWB = 100*QWB, NPI = 100*NPI) %>% arrange(desc(NPI)) %>% View()
team_names
team_names %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
team_summary %>% View()
team_summary %>% transmute(Team_Name, SOS = 100*SOS, QWB = 100*QWB, NPI = 100*NPI) %>% arrange(desc(NPI)) %>% View()
team_names %>% tail()
hyper_games %>% filter(Date == 20240914)
hyper_games %>% tail()
team_names %>% filter(Team_Name == "Nichols" | Team_Name == "Hartwick")
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
team_names %>% View()
hyper_games %>% View()
combined_games %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
team_summary %>% View()
team_summary %>% transmute(Team_Name, SOS = 100*SOS, QWB = 100*QWB, NPI = 100*NPI) %>% arrange(desc(NPI)) %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
team_names %>% filter(Team_Name == "Trinity_TX")
combined_games %>% filter(Team_ID == 201 %>% View())
combined_games %>% filter(Team_ID == 201) %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/NCAA Percentage Index.R", echo=TRUE)
combined_games %>% filter(Team_ID == 201) %>% View()
source("C:/Users/logan/OneDrive/R/Hansen Ratings/Optimized NCAA Percentage Index.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/Website update code.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/2025 Season Simulation EC2 Launcher.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/Website update code.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/Website update code.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/deploy_app.R", echo=TRUE)
source("C:/Users/logan/OneDrive/R/Hansen Ratings/Website update code.R", echo=TRUE)
Game_Proj <- read_sheet(ratings_url,
sheet = "Current Week",
range = "B2:J",
col_names = TRUE,
col_types = NULL) %>%
arrange(desc(`Game Score`))
Game_Proj <- Game_Proj %>%
left_join(transmute(Hansen_Ratings,
Home = Team,
`H Conf` = Conf),
by = c("Home" = "Home")) %>%
left_join(transmute(Hansen_Ratings,
Away = Team,
`A Conf` = Conf),
by = c("Away" = "Away"))
Game_Proj <- Game_Proj %>%
left_join(Season_Sim,
by = c("Home" = "Team")) %>%
left_join(Season_Sim,
by = c("Away" = "Team"),
suffix = c("_H","_A"))
Game_Proj <- Game_Proj %>%
mutate(`H Lev` = case_when(next_week == "Week 1" ~ Wk1_Lev_H,
next_week == "Week 2" ~ Wk2_Lev_H,
next_week == "Week 3" ~ Wk3_Lev_H,
next_week == "Week 4" ~ Wk4_Lev_H,
next_week == "Week 5" ~ Wk5_Lev_H,
next_week == "Week 6" ~ Wk6_Lev_H,
next_week == "Week 7" ~ Wk7_Lev_H,
next_week == "Week 8" ~ Wk8_Lev_H,
next_week == "Week 9" ~ Wk9_Lev_H,
next_week == "Week 10" ~ Wk10_Lev_H,
next_week == "Week 11" ~ Wk11_Lev_H),
`A Lev` = case_when(next_week == "Week 1" ~ Wk1_Lev_A,
next_week == "Week 2" ~ Wk2_Lev_A,
next_week == "Week 3" ~ Wk3_Lev_A,
next_week == "Week 4" ~ Wk4_Lev_A,
next_week == "Week 5" ~ Wk5_Lev_A,
next_week == "Week 6" ~ Wk6_Lev_A,
next_week == "Week 7" ~ Wk7_Lev_A,
next_week == "Week 8" ~ Wk8_Lev_A,
next_week == "Week 9" ~ Wk9_Lev_A,
next_week == "Week 10" ~ Wk10_Lev_A,
next_week == "Week 11" ~ Wk11_Lev_A)) %>%
replace_na(list(`H Lev` = 0,
`A Lev` = 0)) %>%
transmute(Home,
`H Conf`,
`H Score`,
`H Win%`,
Away,
`A Conf`,
`A Score`,
`A Win%`,
Spread,
Total,
`H Lev`,
`A Lev`,
Leverage = `H Lev` + `A Lev`,
`Game Score` = `Game Score` + 10*Leverage) %>%
arrange(desc(`Game Score`))
Game_Proj %>% write_csv(paste(season," ",next_week," Games.csv", sep = ""))
Games_Table <- Game_Proj %>%
reactable(pagination = FALSE,
width = "100%",  # Make table take full container width
style = list(
fontFamily = "Raleway",
maxWidth = "100%"  # Ensure table doesn't exceed container
),
defaultSortOrder = "desc",
searchable = TRUE,
highlight = TRUE,
rownames = TRUE,
showSortIcon = FALSE,
defaultColDef = colDef(
style = JS("function(rowInfo, column, state) {
// Highlight sorted columns
for (let i = 0; i < state.sorted.length; i++) {
if (state.sorted[i].id === column.id) {
return { background: 'rgba(0, 0, 0, 0.05)' }
}
}
}")
),
columns = list(
.rownames = colDef(show = FALSE),
Home = colDef(
minWidth = 200,
align = "left",
sticky = "left"),
'H Conf' = colDef(
minWidth = 100,
align = "left"),
'H Score' = colDef(
name = "Score",
minWidth = 70,
align = "center",
format = colFormat(digits = 1),
style = color_scales(Game_Proj,
colors = c("#ffffff","#ed7d31"))),
'H Win%' = colDef(
name = "Win%",
minWidth = 70,
align = "center",
format = colFormat(percent = TRUE,
digits = 1),
style = color_scales(Game_Proj,
colors = c("#323e4f","#ffffff","#ed7d31"))),
Away = colDef(
minWidth = 200,
align = "left",
sticky = "left"),
'A Conf' = colDef(
minWidth = 100,
align = "left"),
'A Score' = colDef(
name = "Score",
minWidth = 70,
align = "center",
format = colFormat(digits = 1),
style = color_scales(Game_Proj,
colors = c("#ffffff","#ed7d31"))),
'A Win%' = colDef(
name = "Win%",
minWidth = 70,
align = "center",
format = colFormat(percent = TRUE,
digits = 1),
style = color_scales(Game_Proj,
colors = c("#323e4f","#ffffff","#ed7d31"))),
Spread = colDef(
minWidth = 70,
align = "center",
format = colFormat(digits = 1),
style = color_scales(Game_Proj,
colors = c("#323e4f","#ffffff","#ed7d31"))),
Total = colDef(
minWidth = 70,
align = "center",
format = colFormat(digits = 1),
style = color_scales(Game_Proj,
colors = c("#ffffff","#ed7d31"))),
`H Lev` = colDef(
minWidth = 70,
align = "center",
header = with_tooltip(
"H Lev",
"Home team playoff leverage - the relative difference in team playoff odds based on the outcome of the game"),
format = colFormat(percent = TRUE,
digits = 1),
style = color_scales(Game_Proj,
colors = c("#ffffff","#ed7d31"))),
`A Lev` = colDef(
minWidth = 70,
align = "center",
header = with_tooltip(
"A Lev",
"Away team playoff leverage - the relative difference in team playoff odds based on the outcome of the game"),
format = colFormat(percent = TRUE,
digits = 1),
style = color_scales(Game_Proj,
colors = c("#ffffff","#ed7d31"))),
Leverage = colDef(
minWidth = 90,
align = "center",
header = with_tooltip(
"Leverage",
"Cumulative playoff leverage for both teams"),
format = colFormat(percent = TRUE,
digits = 1),
style = color_scales(Game_Proj,
colors = c("#ffffff","#ed7d31"))),
'Game Score' = colDef(
minWidth = 90,
align = "center",
header = with_tooltip(
"Game Score",
"A meaningless number that correlates with the quality of the teams, how close the game is expected to be, and playoff leverage"),
format = colFormat(digits = 1),
style = color_scales(Game_Proj,
colors = c("#ffffff","#ed7d31")))
)) %>%
add_title(paste(season," DIII Football Game Projections", sep = "")) %>%
add_subtitle(next_week) %>%
reactablefmtr::google_font(font_family = "Raleway")
Games_Table %>%
save_reactable_test(paste("Temp ",season," ",next_week,".html", sep = ""))
modify_reactable_html(input_file = paste("Temp ",season," ",next_week,".html", sep = ""),
output_file = paste(season," ",next_week,".html", sep = ""),
page_title = paste("Hansen Ratings - ",season," ",next_week, sep = ""))
Game_Proj <- read_sheet(ratings_url,
sheet = "Current Week",
range = "B2:J",
col_names = TRUE,
col_types = NULL) %>%
arrange(desc(`Game Score`))
Game_Proj <- Game_Proj %>%
left_join(transmute(Hansen_Ratings,
Home = Team,
`H Conf` = Conf),
by = c("Home" = "Home")) %>%
left_join(transmute(Hansen_Ratings,
Away = Team,
`A Conf` = Conf),
by = c("Away" = "Away"))
Game_Proj <- Game_Proj %>%
left_join(Season_Sim,
by = c("Home" = "Team")) %>%
left_join(Season_Sim,
by = c("Away" = "Team"),
suffix = c("_H","_A"))
Game_Proj %>% View
Game_Proj <- read_sheet(ratings_url,
sheet = "Current Week",
range = "B2:J",
col_names = TRUE,
col_types = NULL) %>%
arrange(desc(`Game Score`))
Game_Proj <- Game_Proj %>%
left_join(transmute(Hansen_Ratings,
Home = Team,
`H Conf` = Conf),
by = c("Home" = "Home")) %>%
left_join(transmute(Hansen_Ratings,
Away = Team,
`A Conf` = Conf),
by = c("Away" = "Away"))
Game_Proj %>% View
Game_Proj <- read_sheet(ratings_url,
sheet = "Current Week",
range = "B2:J",
col_names = TRUE,
col_types = NULL) %>%
arrange(desc(`Game Score`))
Game_Proj <- Game_Proj %>%
left_join(Season_Sim,
by = c("Home" = "Team")) %>%
left_join(Season_Sim,
by = c("Away" = "Team"),
suffix = c("_H","_A"))
Game_Proj <- Game_Proj %>%
mutate(`H Lev` = case_when(next_week == "Week 1" ~ Wk1_Lev_H,
next_week == "Week 2" ~ Wk2_Lev_H,
next_week == "Week 3" ~ Wk3_Lev_H,
next_week == "Week 4" ~ Wk4_Lev_H,
next_week == "Week 5" ~ Wk5_Lev_H,
next_week == "Week 6" ~ Wk6_Lev_H,
next_week == "Week 7" ~ Wk7_Lev_H,
next_week == "Week 8" ~ Wk8_Lev_H,
next_week == "Week 9" ~ Wk9_Lev_H,
next_week == "Week 10" ~ Wk10_Lev_H,
next_week == "Week 11" ~ Wk11_Lev_H),
`A Lev` = case_when(next_week == "Week 1" ~ Wk1_Lev_A,
next_week == "Week 2" ~ Wk2_Lev_A,
next_week == "Week 3" ~ Wk3_Lev_A,
next_week == "Week 4" ~ Wk4_Lev_A,
next_week == "Week 5" ~ Wk5_Lev_A,
next_week == "Week 6" ~ Wk6_Lev_A,
next_week == "Week 7" ~ Wk7_Lev_A,
next_week == "Week 8" ~ Wk8_Lev_A,
next_week == "Week 9" ~ Wk9_Lev_A,
next_week == "Week 10" ~ Wk10_Lev_A,
next_week == "Week 11" ~ Wk11_Lev_A)) %>%
replace_na(list(`H Lev` = 0,
`A Lev` = 0)) %>%
transmute(Home,
`H Conf` = Conf_H,
`H Score`,
`H Win%`,
Away,
`A Conf` = Conf_A,
`A Score`,
`A Win%`,
Spread,
Total,
`H Lev`,
`A Lev`,
Leverage = `H Lev` + `A Lev`,
`Game Score` = `Game Score` + 10*Leverage) %>%
arrange(desc(`Game Score`))
Game_Proj %>% View
source("C:/Users/logan/OneDrive/R/Hansen Ratings/Website update code.R", echo=TRUE)
